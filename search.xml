<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>谢尔宾斯基地毯</title>
    <url>/2023/10/29/%E8%B0%A2%E5%B0%94%E5%AE%BE%E6%96%AF%E5%9F%BA%E5%9C%B0%E6%AF%AF/</url>
    <content><![CDATA[<p>先看成品：</p>
<img src="https://i0.imgs.ovh/2023/10/29/AX64d.png" title="" alt="谢尔宾斯基地毯" width="202">

<span id="more"></span>

<h3 id="实现思路：迭代递归"><a href="#实现思路：迭代递归" class="headerlink" title="实现思路：迭代递归"></a>实现思路：迭代递归</h3><ul>
<li>以画整张地毯的思路画某一块地毯，<strong>注意终止条件</strong></li>
</ul>
<p>需要的函数：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">fillRect(x,y,w,h);<span class="comment">//矩形左上角坐标+宽、高 </span></span><br></pre></td></tr></table></figure>

<h1 id="前置知识："><a href="#前置知识：" class="headerlink" title="前置知识："></a>前置知识：</h1><ol>
<li>继承</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> DrawCarpet <span class="keyword">extends</span> <span class="title class_">JFrame</span></span><br><span class="line"><span class="comment">//这里的意思是：</span></span><br><span class="line"><span class="comment">//DrawCarpet类继承了JFrame，于是在DrawCarpet类中可以直接调用JFrame的所有方法</span></span><br><span class="line"><span class="comment">//（DrawCarpet是JFrame的子类）</span></span><br></pre></td></tr></table></figure>

<p>   2.构造函数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> DrawCarpet <span class="keyword">extends</span> <span class="title class_">Jframe</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">DrawCarpet</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//与类同名的函数不声明类型，这样在调用DrawCarpet类时会自动执行DrawCarpet()函数中的指令</span></span><br></pre></td></tr></table></figure>

<p>   3.重构</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.paint(g);</span><br><span class="line">    DrawCarpet();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//@Override用来声明我们要自己重写java中自带的paint()函数，</span></span><br><span class="line"><span class="comment">//而super.paint(g)的意思是继承原本paint()函数中的所有方法</span></span><br></pre></td></tr></table></figure>

<h1 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Scarpet</span> <span class="keyword">extends</span> <span class="title class_">JFrame</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Scarpet</span><span class="params">()</span>&#123;</span><br><span class="line">        setTitle(<span class="string">&quot;谢尔宾斯基地毯&quot;</span>);</span><br><span class="line">        setSize(<span class="number">800</span>,<span class="number">800</span>);</span><br><span class="line">        setResizable(<span class="literal">true</span>);</span><br><span class="line">        setDefaultCloseOperation(EXIT_ON_CLOSE);</span><br><span class="line">        setLocationRelativeTo(<span class="literal">null</span>);</span><br><span class="line">        setVisible(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.paint(g);</span><br><span class="line">        draw(<span class="number">150</span>,<span class="number">150</span>,<span class="number">500</span>,<span class="number">500</span>,g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">draw</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> w,<span class="type">int</span> h,Graphics g)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(w&lt;<span class="number">3</span>) <span class="keyword">return</span> ;</span><br><span class="line">        g.fillRect(x+w/<span class="number">3</span>,y+h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>);</span><br><span class="line">        draw(x,y,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x+w/<span class="number">3</span>,y,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x+<span class="number">2</span>*w/<span class="number">3</span>,y,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x,y+h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x+<span class="number">2</span>*w/<span class="number">3</span>,y+h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x,y+<span class="number">2</span>*h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x+w/<span class="number">3</span>,y+<span class="number">2</span>*h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">        draw(x+<span class="number">2</span>*w/<span class="number">3</span>,y+<span class="number">2</span>*h/<span class="number">3</span>,w/<span class="number">3</span>,h/<span class="number">3</span>,g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Scarpet</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过Java，我们得以可视化递归的过程，显现递归之美。</p>
]]></content>
      <categories>
        <category>Java项目</category>
      </categories>
      <tags>
        <tag>递归</tag>
        <tag>可视化</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo基本用法</title>
    <url>/2023/10/29/hexo%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<span id="more"></span>

<!--more-->

<h2 id=""><a href="#" class="headerlink" title=""></a><!---more---></h2><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
